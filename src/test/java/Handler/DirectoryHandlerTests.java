package Handler;

import org.gemini.codegen.ApiCodeGen.Loader.CustomClassLoader;
import org.gemini.codegen.Handler.DirectoryHandler;
import org.gemini.codegen.JOOQ.PojosGen.EntityClassGenerator;
import org.junit.Test;
import org.junit.jupiter.api.Assertions;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class DirectoryHandlerTests {

    @Test
    public void testCreateDirectory(){
        String directoryPath = "src/test/resources/Handler/demoDirectory";
        DirectoryHandler.createDirectory(directoryPath);
        File file = new File(directoryPath);
        Assertions.assertTrue(file.isDirectory(),"Directory Not Created");
    }

//    @Test
//    public void testGetScriptName(){
//        try {
//            EntityClassGenerator.EntityGenerator("src/test/resources/CustomClassLoader/testScript.sql","entity","src/test/resources/CustomClassLoader/");
//        } catch (Exception e) {
//            throw new RuntimeException("Exception in testLoadClass() :{}",e);
//        }
//        String expected = "DummyScript";
//        String actual = DirectoryHandler.getScriptName();
//        Assertions.assertEquals(expected,actual,"Right Script Not Present ");
//    }

//    @Test
//    public void negTestGetScriptName(){
//    try {
//        EntityClassGenerator.EntityGenerator("src/test/resources/CustomClassLoader/testScript.sql","entity","src/test/resources/CustomClassLoader/");
//    } catch (Exception e) {
//        throw new RuntimeException("Exception in testLoadClass() :{}",e);
//    }
//        //   to check this test method set the expected value as per your database script Name
//        String expected = "DummyScriptt";
//        String actual = DirectoryHandler.getScriptName();
//        Assertions.assertNotEquals(expected,actual);
//    }

//    @Test
//    public void testGenerateDirectoryPath(){
////        Need to set the expected value of directory path to check
//        String expected = ("C:\\Users\\ad.shrivastava\\Desktop\\Autogenerated\\DummyScriptSpringBootApp\\src\\main\\java\\com\\gemini\\DummyScript").replaceAll("[/\\\\]+","/");
//        String actual = DirectoryHandler.generateDirectoryPath();
//        Assertions.assertEquals(expected,actual,"expected path and generated directory path do not match");
//    }

//    @Test
//    public void negTestGeneratedDirectoryPath(){
//        String expected = "C:/Users/ad.shrivastava/Desktop/Autogenerated/DummyScriptSpringBootApp/src/main/java/com/gemini/ DummyScript";
//        String actual = DirectoryHandler.generateDirectoryPath();
//        Assertions.assertNotEquals(expected,actual);
//    }

    @Test
    public void testRenameDirectory(){
        DirectoryHandler.renameDirectory(new File("src/test/resources/Handler/Abc"), new File("src/test/resources/Handler/xyz"));
        File file = new File("src/test/resources/Handler/xyz");
        Assertions.assertTrue(file.isDirectory());
    }

    @Test
    public void testNegRenameDirectory(){
        DirectoryHandler.renameDirectory(new File("src/test/resources/Handler/Abc"), new File("src/test/resources/xyz"));
        File file = new File("src/test/resources/Handler/xyz");
        Assertions.assertFalse(file.isDirectory());
    }

    @Test
    public void testDeleteDirectory(){
        DirectoryHandler.deleteDirectory("src/test/resources/Handler/demo");
        File file = new File("src/test/resources/Handler/demo");
        Assertions.assertFalse(file.exists());
    }
    @Test
    public void testDeleteFiles(){
        File file  = new File("src/test/resources/Handler/DemoClassFiles/");
        CustomClassLoader.compileJavaClasses(file);
        List<String> list = Arrays.asList("Author");
        DirectoryHandler.deleteFiles(list,"src/test/resources/Handler/DemoClassFiles/");
        File classFile = new File("src/test/resources/Handler/DemoClassFiles/Author.class");
        Assertions.assertFalse(classFile.exists());
    }
}

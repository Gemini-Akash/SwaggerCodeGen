package com.gemini.{{scriptName}}.service;
import com.gemini.{{scriptName}}.entity.{{schemaName}}.tables.daos.{{className}}Dao;
import com.gemini.{{scriptName}}.entity.{{schemaName}}.tables.pojos.{{className}};
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import com.gemini.{{scriptName}}.Exception.ServiceException;

@Service
public class {{className}}Service {

    private static final Logger log = LoggerFactory.getLogger(BookService.class);

    @Autowired
    {{className}}Dao objectDao ;

    public {{className}} get{{className}}({{#each primaryKeys}}{{datatype}} {{fieldName}}{{#unless @last}},{{/unless}}{{/each}}){
            try {
                return objectDao.fetchRecord({{#each primaryKeys}}{{fieldName}}{{#unless @last}},{{/unless}}{{/each}});
            }
            catch (Exception e){
                log.info(e.getMessage());
                throw new ServiceException(e.getMessage(),"problem in fetching data");
            }
    }

    public int update{{className}}({{className}} classObject){
        try {
            return objectDao.updateRecord(classObject);
        }
        catch (Exception e) {
            log.error(e.getMessage(),e.getCause());
            throw new ServiceException(e.getMessage(),"problem in updating data");
        }
    }

    public {{className}} add{{className}}({{className}} classObject){
        try {
            return objectDao.insertRecord(classObject);
        }
        catch (Exception e){
            log.error(e.getMessage());
            throw new ServiceException(e.getMessage(),"problem in adding data");
        }
    }

    public int delete{{className}}({{#each primaryKeys}}{{datatype}} {{fieldName}}{{#unless @last}},{{/unless}}{{/each}}){
        try {
                return objectDao.deleteRecord({{#each primaryKeys}}{{fieldName}}{{#unless @last}},{{/unless}}{{/each}});
            }
        catch (Exception e) {
            log.error(e.getMessage(),e.getCause());
            throw new ServiceException(e.getMessage(), "problem in deleting data");
        }
    }

}


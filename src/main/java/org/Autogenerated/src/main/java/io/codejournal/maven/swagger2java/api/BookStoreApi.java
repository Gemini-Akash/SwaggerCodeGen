/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.28).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.codejournal.maven.swagger2java.api;

import io.codejournal.maven.swagger2java.model.BookStore;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2022-09-09T15:04:09.579+05:30")

@Validated
@Api(value = "BookStore", description = "the BookStore API")
@RequestMapping(value = "/v2")
public interface BookStoreApi {

    @ApiOperation(value = "Add a new BookStore object", nickname = "addBookStore", notes = "Add a new BookStore object value.", tags={ "BookStore", })
    @ApiResponses(value = { 
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/BookStore",
        produces = { "application/xml", "application/json" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addBookStore(@ApiParam(value = "Pet object that needs to be added to the store" ,required=true )  @Valid @RequestBody BookStore body);


    @ApiOperation(value = "Deletes a BookStore", nickname = "deleteBookStore", notes = "", tags={ "BookStore", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Invalid BookStore value") })
    @RequestMapping(value = "/BookStore/{NAME}",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteBookStore(@ApiParam(value = "Pet BookStore to delete",required=true) @PathVariable("NAME") String NAME);


    @ApiOperation(value = "Find BookStore by NAME", nickname = "getBookStoreByNAME", notes = "Returns a single BookStore", response = BookStore.class, tags={ "BookStore", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = BookStore.class),
        @ApiResponse(code = 400, message = "Invalid NAME supplied"),
        @ApiResponse(code = 404, message = "BookStore not found") })
    @RequestMapping(value = "/BookStore/{NAME}",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<BookStore> getBookStoreByNAME(@ApiParam(value = "ID of BookStore to return",required=true) @PathVariable("NAME") String NAME);

}

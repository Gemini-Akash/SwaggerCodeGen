/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.28).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.codejournal.maven.swagger2java.api;

import io.codejournal.maven.swagger2java.model.Book;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2022-09-08T20:47:09.323+05:30")

@Validated
@Api(value = "Book", description = "the Book API")
@RequestMapping(value = "/v2")
public interface BookApi {

    @ApiOperation(value = "Add a new Book object", nickname = "addBook", notes = "Add a new Book object value.", tags={ "Book", })
    @ApiResponses(value = { 
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/Book",
        produces = { "application/xml", "application/json" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addBook(@ApiParam(value = "Pet object that needs to be added to the store" ,required=true )  @Valid @RequestBody Book body);


    @ApiOperation(value = "Deletes a Book", nickname = "deleteBook", notes = "", tags={ "Book", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Invalid Book value") })
    @RequestMapping(value = "/Book/{ID}",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteBook(@ApiParam(value = "Pet Book to delete",required=true) @PathVariable("ID") Long ID);


    @ApiOperation(value = "Find Book by ID", nickname = "getBookByID", notes = "Returns a single Book", response = Book.class, tags={ "Book", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Book.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Book not found") })
    @RequestMapping(value = "/Book/{ID}",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Book> getBookByID(@ApiParam(value = "ID of Book to return",required=true) @PathVariable("ID") Long ID);

}

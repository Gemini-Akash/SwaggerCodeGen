/*
 * This file is generated by jOOQ.
 */
package entity.demo;


import entity.demo.tables.Author;
import entity.demo.tables.Book;
import entity.demo.tables.Language;
import entity.demo.tables.records.AuthorRecord;
import entity.demo.tables.records.BookRecord;
import entity.demo.tables.records.LanguageRecord;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * DEMO.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AuthorRecord> CONSTRAINT_7 = Internal.createUniqueKey(Author.AUTHOR, DSL.name("CONSTRAINT_7"), new TableField[]{Author.AUTHOR.ID}, true);
    public static final UniqueKey<BookRecord> CONSTRAINT_1 = Internal.createUniqueKey(Book.BOOK, DSL.name("CONSTRAINT_1"), new TableField[]{Book.BOOK.ID}, true);
    public static final UniqueKey<LanguageRecord> CONSTRAINT_C = Internal.createUniqueKey(Language.LANGUAGE, DSL.name("CONSTRAINT_C"), new TableField[]{Language.LANGUAGE.CD}, true);
    public static final UniqueKey<LanguageRecord> CONSTRAINT_CE = Internal.createUniqueKey(Language.LANGUAGE, DSL.name("CONSTRAINT_CE"), new TableField[]{Language.LANGUAGE.ID}, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<BookRecord, AuthorRecord> FK_BOOK_AUTHOR = Internal.createForeignKey(Book.BOOK, DSL.name("FK_BOOK_AUTHOR"), new TableField[]{Book.BOOK.AUTHOR_ID}, Keys.CONSTRAINT_7, new TableField[]{Author.AUTHOR.ID}, true);
    public static final ForeignKey<BookRecord, LanguageRecord> FK_BOOK_LANGUAGE = Internal.createForeignKey(Book.BOOK, DSL.name("FK_BOOK_LANGUAGE"), new TableField[]{Book.BOOK.LANGUAGE_ID}, Keys.CONSTRAINT_CE, new TableField[]{Language.LANGUAGE.ID}, true);
}
